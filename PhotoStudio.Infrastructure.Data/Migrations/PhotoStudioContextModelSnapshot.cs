// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhotoStudio.Infrastructure.Data.DBContext;

#nullable disable

namespace PhotoStudio.Infrastructure.Data.Migrations
{
    [DbContext(typeof(PhotoStudioContext))]
    partial class PhotoStudioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PhotoStudio.Domain.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaterialId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MaterialName");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("MaterialName")
                        .IsUnique()
                        .HasDatabaseName("IX_Material");

                    b.ToTable("Material", (string)null);
                });

            modelBuilder.Entity("PhotoStudio.Domain.Entities.PhotoBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PhotoBookId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaterialId")
                        .HasColumnType("int")
                        .HasColumnName("MaterialId");

                    b.Property<decimal>("PortadaPrice")
                        .HasColumnType("money")
                        .HasColumnName("PortadaPrice");

                    b.Property<decimal>("PriceByPage")
                        .HasColumnType("money")
                        .HasColumnName("PriceByPage");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("Timestamp");

                    b.Property<int>("SizeId")
                        .HasColumnType("int")
                        .HasColumnName("SizeId");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("SizeId", "MaterialId")
                        .IsUnique()
                        .HasDatabaseName("IX_PhotoBook_MaterialId_SizeId_Unique");

                    b.ToTable("PhotoBook", (string)null);
                });

            modelBuilder.Entity("PhotoStudio.Domain.Entities.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SizeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("Timestamp");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Size");

                    b.HasKey("Id");

                    b.HasIndex("SizeName")
                        .IsUnique()
                        .HasDatabaseName("IX_Size_Unique");

                    b.ToTable("Size", (string)null);
                });

            modelBuilder.Entity("PhotoStudio.Domain.Entities.PhotoBook", b =>
                {
                    b.HasOne("PhotoStudio.Domain.Entities.Material", "Material")
                        .WithMany("PhotoBooks")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PhotoBooks_Material");

                    b.HasOne("PhotoStudio.Domain.Entities.Size", "Size")
                        .WithMany("PhotoBooks")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PhotoBooks_Sizes");

                    b.Navigation("Material");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("PhotoStudio.Domain.Entities.Material", b =>
                {
                    b.Navigation("PhotoBooks");
                });

            modelBuilder.Entity("PhotoStudio.Domain.Entities.Size", b =>
                {
                    b.Navigation("PhotoBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
